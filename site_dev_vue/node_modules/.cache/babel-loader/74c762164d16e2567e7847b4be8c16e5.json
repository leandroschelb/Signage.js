{"remainingRequest":"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/thread-loader/dist/cjs.js!/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/babel-loader/lib/index.js!/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lschelb-note/site_sala_cafe/developer_front_end/src/components/Rss.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lschelb-note/site_sala_cafe/developer_front_end/src/components/Rss.vue","mtime":1556537861692},{"path":"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport _parseInt from \"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport $ from 'jquery';\nexport default {\n  name: 'Rssfeed',\n  props: {\n    url: {\n      required: true\n    },\n    nsimulpar: {\n      required: false\n    },\n    // delimita quantas noticias a partir de idAtual serão exibidas\n    refresh: {\n      required: false\n    },\n    freezed: {\n      required: false\n    }\n  },\n  data: function data() {\n    return {\n      displayNoticias: [],\n      bancoNoticias: [],\n      idAtual: 0,\n      // aponta para o indice da primeira noticia sendo exibida\n      nSimul: 1,\n      // quantidade de noticias exibidas simultaneamente\n      refreshtime: 8000\n    };\n  },\n  created: function created() {\n    this.puxaNoticiasDoRss();\n  },\n  methods: {\n    puxaNoticiasDoRss: function puxaNoticiasDoRss() {\n      var _this = this;\n\n      if (this.nsimulpar) this.nSimul = _parseInt(this.nsimulpar); // se nSimulPar for passado, nSimul = nSimulPar\n\n      if (this.refresh) this.refreshtime = _parseInt(this.refresh); // ideia similar à de cima\n\n      $.ajax({\n        url: \"api/fetch?feed=\".concat(this.url),\n        dataType: \"text\"\n      }).then(function (result) {\n        var xml = $.parseXML(result); // converte o input em um arquivo xml\n\n        var items = xml.getElementsByTagName(\"item\"); // seleciona todos os itens (noticias)\n\n        for (var i = 0; i < items.length; i++) {\n          // para cada um deles, gera um objeto com suas informação e adiciona ao banco\n          var aux = {\n            id: i,\n            titulo: items[i].getElementsByTagName(\"title\")[0].childNodes[0].nodeValue,\n            descricao: ''\n          };\n          if (items[i].getElementsByTagName(\"description\")[0].childNodes.length > 0) aux.descricao = items[i].getElementsByTagName(\"description\")[0].childNodes[0].nodeValue.replace(/&nbsp;/g, \"\"), // pega a descrição e remove &nbsp que atrapalham a formatação\n          _this.bancoNoticias.push(aux);\n        }\n\n        if (_this.bancoNoticias.length) {\n          // garante a chamada de update apenas tive ao menos 1 item\n          _this.proxNoticia();\n        }\n      }).catch(function (error) {\n        setTimeout(_this.puxaNoticiasDoRss, 1000 * 60 * 0.5);\n      });\n    },\n    proxNoticia: function proxNoticia() {\n      if (this.freezed) return;\n      this.displayNoticias = []; // zera o display TODO: talvez seja mais rapido mover no lugar de limpar todos\n\n      for (var i = 0; i < this.nSimul && this.idAtual + i < this.bancoNoticias.length; i++) {\n        this.displayNoticias.push(this.bancoNoticias[this.idAtual + i]);\n      }\n\n      this.idAtual += this.nSimul;\n      if (this.idAtual >= this.bancoNoticias.length) this.idAtual = 0;\n      setTimeout(this.proxNoticia, this.refreshtime);\n    }\n  }\n};",{"version":3,"sources":["Rss.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"rssfeed\">\n\t<div class=\"noticia\" v-for=\"noticia in displayNoticias\" v-bind:key=\"noticia.id\">\n\t\t<h3 class = \"titulo\">{{noticia.titulo}}</h3>\n\t\t<p class = \"descricao\" v-html=\"noticia.descricao\"></p>\n\t</div>\n</div>\n</template>\n\n<script>\nimport $ from 'jquery'\n\nexport default {\n\t\tname: 'Rssfeed',\n\t\tprops: {\n\t\t\t\turl : {required: true},\n\t\t\t\tnsimulpar: {required: false},                                                                            // delimita quantas noticias a partir de idAtual serão exibidas\n\t\t\t\trefresh: {required: false},\n\t\t\t\tfreezed: {required: false},\n\t\t},\n\tdata () {\n\t\treturn {\n\t\t\tdisplayNoticias: [],\n\t\t\tbancoNoticias: [],\n\t\t\tidAtual: 0,                                                                                              // aponta para o indice da primeira noticia sendo exibida\n\t\t\tnSimul: 1,                                                                                       // quantidade de noticias exibidas simultaneamente\n\t\t\trefreshtime: 8000,\n\t\t}\n\t},\n\tcreated: function(){\n\t\tthis.puxaNoticiasDoRss();\n\t},\n\tmethods: {\n\t\tpuxaNoticiasDoRss: function(){\n\t\t\tif(this.nsimulpar) this.nSimul = parseInt(this.nsimulpar)                                                 // se nSimulPar for passado, nSimul = nSimulPar\n\t\t\tif(this.refresh) this.refreshtime = parseInt(this.refresh)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ideia similar à de cima\n\t\t\t$.ajax({\n\t\t\t\turl: `api/fetch?feed=${this.url}`,\n\t\t\t\tdataType: \"text\",\n\t\t\t}).then((result) => {\n\t\t\t\tlet xml = $.parseXML(result)                                                                     // converte o input em um arquivo xml\n\t\t\t\tlet items = xml.getElementsByTagName(\"item\")                                                     // seleciona todos os itens (noticias)\n\t\t\t\tfor(let i = 0; i < items.length; i++) {                                                   // para cada um deles, gera um objeto com suas informação e adiciona ao banco\n\t\t\t\t\tlet aux = {\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\ttitulo: items[i].getElementsByTagName(\"title\")[0].childNodes[0].nodeValue,\n\t\t\t\t\t\tdescricao: ''\n\t\t\t\t\t}\n\t\t\t\t\tif(items[i].getElementsByTagName(\"description\")[0].childNodes.length > 0)\n\t\t\t\t\t\taux.descricao =  items[i].getElementsByTagName(\"description\")[0].childNodes[0].nodeValue.replace(/&nbsp;/g,\"\"), // pega a descrição e remove &nbsp que atrapalham a formatação\n\t\t\t\t\tthis.bancoNoticias.push(aux)\n\t\t\t\t}\n\t\t\t\tif(this.bancoNoticias.length){                                                                    // garante a chamada de update apenas tive ao menos 1 item\n\t\t\t\t\tthis.proxNoticia()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch( (error) => {\n\t\t\t\tsetTimeout(this.puxaNoticiasDoRss, 1000*60*0.5);\n\t\t\t})\n\t\t},\n\t\tproxNoticia: function () {\n\t\t\tif(this.freezed)\n\t\t\t\treturn;\n\t\t\tthis.displayNoticias = []               // zera o display TODO: talvez seja mais rapido mover no lugar de limpar todos\n\t\t\tfor(let i = 0; i < this.nSimul && this.idAtual + i < this.bancoNoticias.length ; i++)\n\t\t\t\tthis.displayNoticias.push(this.bancoNoticias[this.idAtual+i])\n\t\t\tthis.idAtual+=this.nSimul;\n\t\t\tif(this.idAtual >= this.bancoNoticias.length)\n\t\t\t\tthis.idAtual = 0;\n\t\t\tsetTimeout(this.proxNoticia, this.refreshtime);\n\t\t}\n\t}\n}\n</script>\n\n<style>\n\n.noticia {\n\tpadding: 0px 10px 0px 10px;\n}\n\n.noticia img{\n\tpadding-right: 40px;\n}\n</style>"],"sourceRoot":"src/components"}]}