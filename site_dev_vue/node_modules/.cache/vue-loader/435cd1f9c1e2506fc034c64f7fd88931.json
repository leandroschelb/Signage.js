{"remainingRequest":"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/lschelb-note/site_sala_cafe/developer_front_end/src/components/Rss.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/lschelb-note/site_sala_cafe/developer_front_end/src/components/Rss.vue","mtime":1556537789017},{"path":"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/lschelb-note/site_sala_cafe/developer_front_end/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport $ from 'jquery'\n\nexport default {\n\t\tname: 'Rssfeed',\n\t\tprops: {\n\t\t\t\turl : {required: true},\n\t\t\t\tnsimulpar: {required: false},                                                                            // delimita quantas noticias a partir de idAtual serão exibidas\n\t\t\t\trefresh: {required: false},\n\t\t\t\tfreezed: {required: false},\n\t\t},\n\tdata () {\n\t\treturn {\n\t\t\tdisplayNoticias: [],\n\t\t\tbancoNoticias: [],\n\t\t\tidAtual: 0,                                                                                              // aponta para o indice da primeira noticia sendo exibida\n\t\t\tnSimul: 1,                                                                                       // quantidade de noticias exibidas simultaneamente\n\t\t\trefreshtime: 8000,\n\t\t}\n\t},\n\tcreated: function(){\n\t\tthis.puxaNoticiasDoRss();\n\t},\n\tmethods: {\n\t\tpuxaNoticiasDoRss: function(){\n\t\t\tif(this.nsimulpar) this.nSimul = parseInt(this.nsimulpar)                                                 // se nSimulPar for passado, nSimul = nSimulPar\n\t\t\tif(this.refresh) this.refreshtime = parseInt(this.refresh)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ideia similar à de cima\n\t\t\t$.ajax({\n\t\t\t\turl: `api/fetch?feed=${this.url}`,\n\t\t\t\tdataType: \"text\",\n\t\t\t}).then((result) => {\n\t\t\t\tlet xml = $.parseXML(result)                                                                     // converte o input em um arquivo xml\n\t\t\t\tlet items = xml.getElementsByTagName(\"item\")                                                     // seleciona todos os itens (noticias)\n\t\t\t\tfor(let i = 0; i < items.length; i++) {                                                   // para cada um deles, gera um objeto com suas informação e adiciona ao banco\n\t\t\t\t\tlet aux = {\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\ttitulo: items[i].getElementsByTagName(\"title\")[0].childNodes[0].nodeValue,\n\t\t\t\t\t\tdescricao: ''\n\t\t\t\t\t}\n\t\t\t\t\tif(items[i].getElementsByTagName(\"description\")[0].childNodes.length > 0)\n\t\t\t\t\t\taux.descricao =  items[i].getElementsByTagName(\"description\")[0].childNodes[0].nodeValue.replace(/&nbsp;/g,\"\"), // pega a descrição e remove &nbsp que atrapalham a formatação\n\t\t\t\t\tthis.bancoNoticias.push(aux)\n\t\t\t\t}\n\t\t\t\tif(this.bancoNoticias.length){                                                                    // garante a chamada de update apenas tive ao menos 1 item\n\t\t\t\t\tthis.proxNoticia()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch( (error) => {\n\t\t\t\tsetTimeout(this.puxaNoticiasDoRss, 1000*60*0.5);\n\t\t\t})\n\t\t},\n\t\tproxNoticia: function () {\n\t\t\tif(this.freezed)\n\t\t\t\treturn;\n\t\t\tthis.displayNoticias = []               // zera o display TODO: talvez seja mais rapido mover no lugar de limpar todos\n\t\t\tfor(let i = 0; i < this.nSimul && this.idAtual + i < this.bancoNoticias.length ; i++)\n\t\t\t\tthis.displayNoticias.push(this.bancoNoticias[this.idAtual+i])\n\t\t\tthis.idAtual+=this.nSimul;\n\t\t\tif(this.idAtual >= this.bancoNoticias.length)\n\t\t\t\tthis.idAtual = 0;\n\t\t\tsetTimeout(this.proxNoticia, this.refreshtime);\n\t\t}\n\t}\n}\n",{"version":3,"sources":["Rss.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Rss.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"rssfeed\">\n\t<div class=\"noticia\" v-for=\"noticia in displayNoticias\" v-bind:key=\"noticia.id\">\n\t\t<h3 class = \"titulo\">{{noticia.titulo}}</h3>\n\t\t<p class = \"descricao\" v-html=\"noticia.descricao\"></p>\n\t</div>\n</div>\n</template>\n\n<script>\nimport $ from 'jquery'\n\nexport default {\n\t\tname: 'Rssfeed',\n\t\tprops: {\n\t\t\t\turl : {required: true},\n\t\t\t\tnsimulpar: {required: false},                                                                            // delimita quantas noticias a partir de idAtual serão exibidas\n\t\t\t\trefresh: {required: false},\n\t\t\t\tfreezed: {required: false},\n\t\t},\n\tdata () {\n\t\treturn {\n\t\t\tdisplayNoticias: [],\n\t\t\tbancoNoticias: [],\n\t\t\tidAtual: 0,                                                                                              // aponta para o indice da primeira noticia sendo exibida\n\t\t\tnSimul: 1,                                                                                       // quantidade de noticias exibidas simultaneamente\n\t\t\trefreshtime: 8000,\n\t\t}\n\t},\n\tcreated: function(){\n\t\tthis.puxaNoticiasDoRss();\n\t},\n\tmethods: {\n\t\tpuxaNoticiasDoRss: function(){\n\t\t\tif(this.nsimulpar) this.nSimul = parseInt(this.nsimulpar)                                                 // se nSimulPar for passado, nSimul = nSimulPar\n\t\t\tif(this.refresh) this.refreshtime = parseInt(this.refresh)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// ideia similar à de cima\n\t\t\t$.ajax({\n\t\t\t\turl: `api/fetch?feed=${this.url}`,\n\t\t\t\tdataType: \"text\",\n\t\t\t}).then((result) => {\n\t\t\t\tlet xml = $.parseXML(result)                                                                     // converte o input em um arquivo xml\n\t\t\t\tlet items = xml.getElementsByTagName(\"item\")                                                     // seleciona todos os itens (noticias)\n\t\t\t\tfor(let i = 0; i < items.length; i++) {                                                   // para cada um deles, gera um objeto com suas informação e adiciona ao banco\n\t\t\t\t\tlet aux = {\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\ttitulo: items[i].getElementsByTagName(\"title\")[0].childNodes[0].nodeValue,\n\t\t\t\t\t\tdescricao: ''\n\t\t\t\t\t}\n\t\t\t\t\tif(items[i].getElementsByTagName(\"description\")[0].childNodes.length > 0)\n\t\t\t\t\t\taux.descricao =  items[i].getElementsByTagName(\"description\")[0].childNodes[0].nodeValue.replace(/&nbsp;/g,\"\"), // pega a descrição e remove &nbsp que atrapalham a formatação\n\t\t\t\t\tthis.bancoNoticias.push(aux)\n\t\t\t\t}\n\t\t\t\tif(this.bancoNoticias.length){                                                                    // garante a chamada de update apenas tive ao menos 1 item\n\t\t\t\t\tthis.proxNoticia()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch( (error) => {\n\t\t\t\tsetTimeout(this.puxaNoticiasDoRss, 1000*60*0.5);\n\t\t\t})\n\t\t},\n\t\tproxNoticia: function () {\n\t\t\tif(this.freezed)\n\t\t\t\treturn;\n\t\t\tthis.displayNoticias = []               // zera o display TODO: talvez seja mais rapido mover no lugar de limpar todos\n\t\t\tfor(let i = 0; i < this.nSimul && this.idAtual + i < this.bancoNoticias.length ; i++)\n\t\t\t\tthis.displayNoticias.push(this.bancoNoticias[this.idAtual+i])\n\t\t\tthis.idAtual+=this.nSimul;\n\t\t\tif(this.idAtual >= this.bancoNoticias.length)\n\t\t\t\tthis.idAtual = 0;\n\t\t\tsetTimeout(this.proxNoticia, this.refreshtime);\n\t\t}\n\t}\n}\n</script>\n\n<style>\n\n.noticia {\n\tpadding: 0px 10px 0px 10px;\n}\n\n.noticia img{\n\tpadding-right: 40px;\n}\n</style>"]}]}